"use strict";

var intervalId;

function Game() {
  this.score = 0;

  this.moleMachine = function () {
    var boxNumber = Math.floor(Math.random() * 25 + 1);
    var boxPhrase = "div.field div:nth-child(" + boxNumber + ")";
    var moleBox = document.querySelector(boxPhrase);
    var allBoxes = document.querySelectorAll(".hole");
    allBoxes = [].slice.call(allBoxes);
    allBoxes.forEach(function (box) {
      box.style.backgroundColor = "black";
    });
    moleBox.style.backgroundColor = "#33FF33";
  };

  this.doThings = function doThings() {
    meterAdjustment();
    var speed = 1500 - this.score * 1.5;
    if (speed === 0) {
      clearInterval(intervalId);
    } else {
      intervalId = setInterval(moleSwitcher, speed);
    }
  };
}

var blinker = document.querySelector(".blinker");

var painMeter = document.querySelectorAll(".level");
var painMeter = [].slice.call(painMeter);

var meterAdjustment = function meterAdjustment() {
  var levelNumber = game.score / 100;
  painMeter.forEach(function (face) {
    face.style.backgroundColor = "black";
  });
  for (var j = 0; j < levelNumber; j++) {
    painMeter[j].style.backgroundColor = "#33FF33";
  }
};

setInterval(function () {
  if (blinker.style.display === "none") {
    blinker.style.display = "inline-block";
  } else {
    blinker.style.display = "none";
  }
}, 500);

var startButton = document.querySelector(".button");

var game;

startButton.onclick = function () {
  game = new Game();
  whack();
  game.doThings();
  startButton.style.opacity = ".5";
};

var moleSwitcher = function moleSwitcher() {
  game.moleMachine();
};

var scoreBoard = document.querySelector(".score");

var scoreCard = function scoreCard() {
  if (this.style.backgroundColor !== "black") {
    game.score += 100;
  } else {
    game.score -= 100;
  }
  scoreBoard.innerHTML = "Score: " + game.score;
  this.style.backgroundColor = "black";
  clearInterval(intervalId);
  game.doThings();
};

function whack() {
  for (var i = 1; i < 26; i++) {
    var clickedMole = document.querySelector(".field div:nth-child(" + i + ")");
    clickedMole.onclick = scoreCard;
  }
}

var cheat = document.querySelector(".cheat");

cheat.onclick = function () {
  game.score = 800;
  scoreBoard.innerHTML = "Score: " + game.score;
  clearInterval(intervalId);
  game.doThings();
};
//# sourceMappingURL=data:application/json;base64,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O0FBQzFCLE1BQUksQ0FBQyxLQUFLLEdBQUUsR0FBRyxDQUFDO0FBQ2hCLFlBQVUsQ0FBQyxTQUFTLEdBQUcsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7QUFDOUMsZUFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQzFCLE1BQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztDQUNmLENBQUEiLCJmaWxlIjoic3JjL2pzL21haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaW50ZXJ2YWxJZDtcblxuZnVuY3Rpb24gR2FtZSAoKSB7XG4gIHRoaXMuc2NvcmU9IDA7XG5cbiAgdGhpcy5tb2xlTWFjaGluZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgYm94TnVtYmVyID0gTWF0aC5mbG9vcigoTWF0aC5yYW5kb20oKSoyNSkrMSk7XG4gICAgdmFyIGJveFBocmFzZSA9IFwiZGl2LmZpZWxkIGRpdjpudGgtY2hpbGQoXCIgKyBib3hOdW1iZXIgKyBcIilcIjtcbiAgICB2YXIgbW9sZUJveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYm94UGhyYXNlKTtcbiAgICB2YXIgYWxsQm94ZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmhvbGVcIik7XG4gICAgYWxsQm94ZXMgPSBbXS5zbGljZS5jYWxsKGFsbEJveGVzKTtcbiAgICBhbGxCb3hlcy5mb3JFYWNoKGZ1bmN0aW9uIChib3gpIHsgYm94LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiYmxhY2tcIjtcbiAgICB9KTtcbiAgICBtb2xlQm94LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiIzMzRkYzM1wiO1xuICB9O1xuXG4gIHRoaXMuZG9UaGluZ3MgPSBmdW5jdGlvbiBkb1RoaW5ncyAoKSB7XG4gICAgbWV0ZXJBZGp1c3RtZW50KCk7XG4gICAgdmFyIHNwZWVkID0gMTUwMCAtICh0aGlzLnNjb3JlKjEuNSk7XG4gICAgaWYgKHNwZWVkID09PSAwKSB7XG4gICAgICBjbGVhckludGVydmFsKGludGVydmFsSWQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwgKG1vbGVTd2l0Y2hlciwgc3BlZWQpO1xuICAgIH1cbiAgfTtcbn1cblxudmFyIGJsaW5rZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmJsaW5rZXJcIilcblxudmFyIHBhaW5NZXRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubGV2ZWxcIik7XG52YXIgcGFpbk1ldGVyID0gW10uc2xpY2UuY2FsbChwYWluTWV0ZXIpO1xuXG52YXIgbWV0ZXJBZGp1c3RtZW50ID0gZnVuY3Rpb24gKCkge1xuICB2YXIgbGV2ZWxOdW1iZXIgPSAoZ2FtZS5zY29yZS8xMDApO1xuICBwYWluTWV0ZXIuZm9yRWFjaCggZnVuY3Rpb24gKGZhY2UpIHsgZmFjZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcImJsYWNrXCI7fSk7XG4gIGZvciAodmFyIGogPSAwOyBqPCBsZXZlbE51bWJlcjsgaisrKSB7XG4gICAgcGFpbk1ldGVyW2pdLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiIzMzRkYzM1wiO1xuICB9XG59XG5cbnNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcbiAgaWYgKGJsaW5rZXIuc3R5bGUuZGlzcGxheSA9PT0gXCJub25lXCIpIHtcbiAgICBibGlua2VyLnN0eWxlLmRpc3BsYXkgPSBcImlubGluZS1ibG9ja1wiO30gZWxzZSB7XG4gICAgYmxpbmtlci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7fVxuICAgIH0sIDUwMClcblxudmFyIHN0YXJ0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5idXR0b25cIik7XG5cbnZhciBnYW1lO1xuXG5zdGFydEJ1dHRvbi5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xuICBnYW1lID0gbmV3IEdhbWUoKTtcbiAgd2hhY2soKTtcbiAgZ2FtZS5kb1RoaW5ncygpO1xuICBzdGFydEJ1dHRvbi5zdHlsZS5vcGFjaXR5ID0gXCIuNVwiO1xufTtcblxudmFyIG1vbGVTd2l0Y2hlciA9IGZ1bmN0aW9uICgpIHtcbiAgICBnYW1lLm1vbGVNYWNoaW5lKCk7XG4gIH07XG5cbnZhciBzY29yZUJvYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zY29yZVwiKTtcblxudmFyIHNjb3JlQ2FyZCA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgIT09IFwiYmxhY2tcIikge1xuICAgICAgZ2FtZS5zY29yZSArPSAxMDA7XG4gICAgfSBlbHNlIHtnYW1lLnNjb3JlIC09IDEwMDt9XG4gICAgc2NvcmVCb2FyZC5pbm5lckhUTUwgPSBcIlNjb3JlOiBcIiArIGdhbWUuc2NvcmU7XG4gICAgdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcImJsYWNrXCI7XG4gICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbElkKTtcbiAgICBnYW1lLmRvVGhpbmdzKCk7XG4gIH07XG5cbmZ1bmN0aW9uIHdoYWNrICgpIHtcbiAgZm9yICh2YXIgaT0xOyBpPDI2OyBpKyspIHtcbiAgICB2YXIgY2xpY2tlZE1vbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZpZWxkIGRpdjpudGgtY2hpbGQoXCIgKyBpICsgXCIpXCIpO1xuICAgIGNsaWNrZWRNb2xlLm9uY2xpY2sgPSBzY29yZUNhcmQ7XG4gIH1cbn1cblxudmFyIGNoZWF0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jaGVhdFwiKVxuXG5jaGVhdC5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xuICBnYW1lLnNjb3JlPSA4MDA7XG4gIHNjb3JlQm9hcmQuaW5uZXJIVE1MID0gXCJTY29yZTogXCIgKyBnYW1lLnNjb3JlO1xuICBjbGVhckludGVydmFsKGludGVydmFsSWQpO1xuICBnYW1lLmRvVGhpbmdzKCk7XG4gIH1cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiJdfQ==
